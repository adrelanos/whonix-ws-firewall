#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

#set -x
set -o pipefail

for i in /etc/whonix_firewall.d/*; do
   if [ -f "$i" ]; then
      ## If the last character is a ~, ignore that file, because it was created
      ## by some editor, which creates backup files.
      if [ "${i: -1}" = "~" ]; then
         continue
      fi
      ## Skipping files such as .dpkg-old and .dpkg-dist.
      if ( echo "$i" | grep -q ".dpkg-" ); then
         true "skip $i"
         continue
      fi
      source "$i"
   fi
done

if [ ! "$WORKSTATION_FIREWALL" = "1" ]; then
   set -x
   : " "
   : " "
   : "#################################################"
   : "## Whonix second, optional, extra firewall INFO #"
   : "#################################################"
   : "##"
   : "## There is a second, extra firewall for Whonix-Workstation."
   : "## It is disabled by default."
   : "## Experts should read the design notes in"
   : "## its man page and make an informed decision."
   : "##    man whonix_firewall"
   : "##"
   : "########################################################"
   : "## End of Whonix second, optional, extra firewall INFO #"
   : "########################################################"
   : " "
   exit 0
fi


## NOTE: If you make changes to this firewall, think about, if it would
##       make sense to add the changes to Whonix-Gateway script as well.
##       Some things like dropping invalid packages, should be shared.

## TODO:
## - Should allow unlimited TCP/UDP/IPv6 traffic on the virtual external interface (OnionCat / OpenVPN).

## source for some rules:
## http://www.cyberciti.biz/faq/ip6tables-ipv6-firewall-for-linux/

###########################
## /usr/bin/whonix_firewall
###########################

echo "OK: Loading Whonix firewall..."

###########################
## error_handler
###########################

error_handler() {
   echo "##################################################"
   echo "Whonix firewall script failed!"
   echo "##################################################"
   exit 1
}

trap "error_handler" ERR

###########################
## VARIABELS
###########################

## Not in use/defined yet.
## INT_IF could be the internal network.
## EXT_IF could be an additional virtual network adapter,
##        such as OnionCat or OpenVPN.

## External interface
[ -n "$EXT_IF" ] || EXT_IF="eth0"

## Internal interface
[ -n "$INT_IF" ] || INT_IF="eth1"

[ -n "$GATEWAY_IP" ] || GATEWAY_IP="10.152.152.10"

###########################
## IPv4 DEFAULTS
###########################

## Set secure defaults.
iptables -P INPUT DROP

## FORWARD rules does not actually do anything if forwarding is disabled. Better be safe just in case.
iptables -P FORWARD DROP

## Will be lifted below.
iptables -P OUTPUT DROP

###########################
## IPv4 PREPARATIONS
###########################

## Flush old rules.
iptables -F
iptables -X
iptables -t nat -F
iptables -t nat -X
iptables -t mangle -F
iptables -t mangle -X

######################################
## IPv4 DROP INVALID INCOMING PACKAGES
######################################

## DROP INVALID
iptables -A INPUT -m conntrack --ctstate INVALID -j DROP
iptables -A INPUT -m state --state INVALID -j DROP

## DROP INVALID SYN PACKETS
iptables -A INPUT -p tcp --tcp-flags ALL ACK,RST,SYN,FIN -j DROP
iptables -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP
iptables -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP

## DROP PACKETS WITH INCOMING FRAGMENTS. THIS ATTACK ONCE RESULTED IN KERNEL PANICS
iptables -A INPUT -f -j DROP

## DROP INCOMING MALFORMED XMAS PACKETS
iptables -A INPUT -p tcp --tcp-flags ALL ALL -j DROP

## DROP INCOMING MALFORMED NULL PACKETS
iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP

###########################
## IPv4 INPUT
###########################

## Traffic on the loopback interface is accepted.
iptables -A INPUT -i lo -j ACCEPT

## Established incoming connections are accepted.
iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT

##+# OptionalFeatureNr.2#
##+# Uncomment the following line, if you want to use a Hidden Service
##+# on port 12345.
#iptables -A INPUT -p tcp --dport 12345 -j ACCEPT

## Reject anything not explicitly allowed above.
iptables -A INPUT -j REJECT --reject-with icmp-port-unreachable

###########################
## IPv4 FORWARD
###########################

iptables -A FORWARD -j DROP

########################################
## IPv4 REJECT INVALID OUTGOING PACKAGES
########################################

## Drop invalid outgoing packages,
## unless NO_REJECT_INVALID_OUTGOING_PACKAGES is set to 1.
if [ ! "$NO_REJECT_INVALID_OUTGOING_PACKAGES" = "1" ]; then
   ## https://lists.torproject.org/pipermail/tor-talk/2014-March/032507.html
   iptables -A OUTPUT -m conntrack --ctstate INVALID -j REJECT --reject-with icmp-admin-prohibited
   iptables -A OUTPUT -m state --state INVALID -j REJECT --reject-with icmp-admin-prohibited
   #iptables -A OUTPUT ! -o lo ! -d 127.0.0.1 ! -s 127.0.0.1 -p tcp -m tcp --tcp-flags ACK,FIN ACK,FIN -j REJECT --reject-with icmp-admin-prohibited
   #iptables -A OUTPUT ! -o lo ! -d 127.0.0.1 ! -s 127.0.0.1 -p tcp -m tcp --tcp-flags ACK,RST ACK,RST -j REJECT --reject-with icmp-admin-prohibited

   ## DROP INVALID SYN PACKETS
   iptables -A OUTPUT -p tcp --tcp-flags ALL ACK,RST,SYN,FIN -j REJECT --reject-with icmp-admin-prohibited
   iptables -A OUTPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j REJECT --reject-with icmp-admin-prohibited
   iptables -A OUTPUT -p tcp --tcp-flags SYN,RST SYN,RST -j REJECT --reject-with icmp-admin-prohibited

   ## DROP PACKETS WITH INCOMING FRAGMENTS. THIS ATTACK ONCE RESULTED IN KERNEL PANICS
   iptables -A OUTPUT -f -j REJECT --reject-with icmp-admin-prohibited

   ## DROP INCOMING MALFORMED XMAS PACKETS
   iptables -A OUTPUT -p tcp --tcp-flags ALL ALL -j REJECT --reject-with icmp-admin-prohibited

   ## DROP INCOMING MALFORMED NULL PACKETS
   iptables -A OUTPUT -p tcp --tcp-flags ALL NONE -j REJECT --reject-with icmp-admin-prohibited
fi

###########################
## IPv4 OUTPUT
###########################

## Allow unlimited traffic on localhost.
iptables -A OUTPUT -o lo -j ACCEPT

## Allow Whonix-Workstation to query Whonix-Gateway for DNS.
iptables -A OUTPUT -p udp --dport 53 --dst "$GATEWAY_IP" -j ACCEPT

## Not sure about the next one. UDP is not supported by Tor, why not
## block any outgoing UDP. Might have unwanted side effects when tunneling
## UDP over Tor.
## https://trac.torproject.org/projects/tor/wiki/doc/TorBOX/OptionalConfigurations/TunnelingUDPoverTor
##
## All other non-TCP protocol traffic gets rejected.
## iptables knows 7 different protocols and all.
## (tcp, udp, udplite, icmp, esp, ah, sctp or all)
##
## The following rule (1) does for some unknown reason, not make rule (2) redundant.
## (1) iptables -A OUTPUT -p udp -j REJECT --reject-with icmp-port-unreachable -> (3)
## (2) iptables -A OUTPUT -p icmp -j REJECT --reject-with icmp-port-unreachable -> (4)
##
## (3) ping torproject.org
##     4 packets transmitted, 0 received, 100% packet loss, time 3000ms
##
## (4) ping torproject.org
##     From 10.152.152.11 icmp_seq=1 Destination Port Unreachable
##     0 packets transmitted, 0 received, +100 errors
##
## The next rule ensures, that only tcp can leave and achieves the desired result from (4).
iptables -A OUTPUT ! -p tcp -j REJECT --reject-with icmp-port-unreachable

## Allow full outgoing connection but no incoming stuff.
iptables -A OUTPUT -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT

## Logging in case, needed for debugging.
#iptables -A OUTPUT -j LOG

## Reject all other outgoing traffic.
iptables -A OUTPUT -j REJECT --reject-with icmp-port-unreachable

###########################
## IPv6
###########################

## Policy DROP for all traffic as fallback.
ip6tables -P INPUT DROP
ip6tables -P OUTPUT DROP
ip6tables -P FORWARD DROP

## Flush old rules.
ip6tables -F
ip6tables -X
ip6tables -t mangle -F
ip6tables -t mangle -X

## Allow unlimited access on loopback.
ip6tables -A INPUT -i lo -j ACCEPT
ip6tables -A OUTPUT -o lo -j ACCEPT

## Logging in case, needed for debugging.
#ip6tables -A INPUT -j LOG

## Drop/reject all other traffic.
ip6tables -A INPUT -j DROP
ip6tables -A OUTPUT -j REJECT --reject-with icmp6-port-unreachable
ip6tables -A FORWARD -j DROP

###########################
## End
###########################

echo "OK: The firewall should show any messages,"
echo "OK: besides output beginning with prefix OK:..."
echo "OK: Whonix firewall loaded."
